<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>life.qbic</groupId>
  <artifactId>barcode-dragon-portlet</artifactId>
  <version>1.5.6</version>
  <name>Barcode Dragon Portlet</name>
  <url>https://github.com/qbicsoftware/barcode-dragon-portlet</url>
  <description>Portlet which allows the creation of printable sample sheets with barcodes for
    customers.
  </description>
  <packaging>war</packaging>
  <properties>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <log4j.version>2.17.1</log4j.version>
    <vaadin.version>7.7.28</vaadin.version>
    <vaadin.plugin.version>7.7.28</vaadin.plugin.version>
    <liferay.version>6.2.5</liferay.version>
    <liferay.maven.plugin.version>6.2.5</liferay.maven.plugin.version>
    <jetty.plugin.version>9.4.10.v20180503</jetty.plugin.version>
    <jetty.scanIntervalSeconds>2</jetty.scanIntervalSeconds>
  </properties>
  <!-- we only need to tell maven where to find our parent pom and other QBiC
    dependencies -->
  <repositories>
    <repository>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
        <checksumPolicy>fail</checksumPolicy>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>maven-central</id>
      <name>Maven central</name>
      <url>https://repo.maven.apache.org/maven2</url>
    </repository>
    <repository>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
        <checksumPolicy>fail</checksumPolicy>
      </snapshots>
      <id>nexus-snapshots</id>
      <name>QBiC Snapshots</name>
      <url>https://qbic-repo.qbic.uni-tuebingen.de/repository/maven-snapshots</url>
    </repository>
    <repository>
      <id>vaadin-addons</id>
      <url>https://maven.vaadin.com/vaadin-addons</url>
    </repository>
    <repository>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
        <checksumPolicy>fail</checksumPolicy>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>nexus-releases</id>
      <name>QBiC Releases</name>
      <url>https://qbic-repo.qbic.uni-tuebingen.de/repository/maven-releases</url>
    </repository>
    <repository>
      <id>liferay-releases</id>
      <url>
        https://repository.liferay.com/nexus/content/repositories/liferay-public-releases/com/liferay/portal/
      </url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>maven-central-plugins</id>
      <url>
        https://repo.maven.apache.org/maven2
      </url>
    </pluginRepository>
    <pluginRepository>
      <id>liferay-releases-plugins</id>
      <url>
        https://repository.liferay.com/nexus/content/repositories/liferay-public-releases/com/liferay/portal/
      </url>
    </pluginRepository>
    <pluginRepository>
      <id>qbic-plugins-2</id>
      <url>https://qbic-repo.qbic.uni-tuebingen.de/repository/maven-releases</url>
    </pluginRepository>
  </pluginRepositories>
  <distributionManagement>
    <repository>
      <uniqueVersion>true</uniqueVersion>
      <id>nexus-releases</id>
      <name>QBiC Releases</name>
      <url>https://qbic-repo.qbic.uni-tuebingen.de/repository/maven-releases</url>
    </repository>
    <snapshotRepository>
      <uniqueVersion>false</uniqueVersion>
      <id>nexus-snapshots</id>
      <name>QBiC Snapshots</name>
      <url>https://qbic-repo.qbic.uni-tuebingen.de/repository/maven-snapshots</url>
    </snapshotRepository>
  </distributionManagement>
  <!-- Doc generation-->
  <build>
    <plugins>
      <plugin>
        <groupId>org.asciidoctor</groupId>
        <artifactId>asciidoctor-maven-plugin</artifactId>
        <version>1.5.8</version>
        <executions>
          <execution>
            <id>generate-docs</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>process-asciidoc</goal>
            </goals>
            <configuration>
              <backend>html</backend>
              <doctype>book</doctype>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.gmavenplus</groupId>
        <artifactId>gmavenplus-plugin</artifactId>
        <version>1.13.0</version>
        <executions>
          <execution>
            <goals>
              <goal>compileTests</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!---portlet pom plugins -->
      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>${jetty.plugin.version}</version>
        <configuration>
          <!-- Jetty's hot deploy enabled has been enabled by default!
             If you want to disable jetty's hot deploy feature, activate the 'jetty-cold-deploy' profile
             via the command line:
             mvn -P jetty-cold-deploy
             Or, alternatively, you can change your settings.xml to permanently activate this profile.
             For more information on how to permanently activate a property,
             see: https://maven.apache.org/settings.html#Profiles
             For more information about the origin of this long comment, see:
             https://github.com/qbicsoftware/parent-poms/issues/4 -->
          <scanIntervalSeconds>${jetty.scanIntervalSeconds}</scanIntervalSeconds>
          <useProvidedScope>true</useProvidedScope>
          <stopPort>8005</stopPort>
          <stopKey>STOP</stopKey>
        </configuration>
        <executions>
          <execution>
            <id>start-jetty</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <scanIntervalSeconds>${jetty.scanIntervalSeconds}</scanIntervalSeconds>
            </configuration>
          </execution>
          <execution>
            <id>stop-jetty</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- enable resource filtering for war files -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>3.2.2</version>
        <configuration>
          <nonFilteredFileExtensions>
            <nonFilteredFileExtension>docx</nonFilteredFileExtension>
            <nonFilteredFileExtension>pdf</nonFilteredFileExtension>
          </nonFilteredFileExtensions>
          <failOnMissingWebXml>true</failOnMissingWebXml>
          <!-- Exclude an unnecessary file generated by the GWT compiler. -->
          <packagingExcludes>WEB-INF/classes/VAADIN/widgetsets/WEB-INF/**</packagingExcludes>
          <webResources>
            <resource>
              <filtering>true</filtering>
              <directory>src/main/resources</directory>
              <targetPath>WEB-INF/classes</targetPath>
            </resource>
            <resource>
              <filtering>true</filtering>
              <directory>src/main/webapp/WEB-INF</directory>
              <targetPath>WEB-INF</targetPath>
            </resource>
          </webResources>
        </configuration>
      </plugin>
      <!--portal plugins-->
      <plugin>
        <groupId>com.liferay.maven.plugins</groupId>
        <artifactId>liferay-maven-plugin</artifactId>
        <version>${liferay.maven.plugin.version}</version>
        <configuration>
          <autoDeployDir>${liferay.auto.deploy.dir}</autoDeployDir>
          <appServerDeployDir>${liferay.app.server.deploy.dir}</appServerDeployDir>
          <appServerLibGlobalDir>${liferay.app.server.lib.global.dir}</appServerLibGlobalDir>
          <appServerPortalDir>${liferay.app.server.portal.dir}</appServerPortalDir>
          <liferayVersion>${liferay.version}</liferayVersion>
          <pluginType>portlet</pluginType>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <!-- To avoid inconsistencies across projects, please check which librares
    are already contained before adding new ones under <dependencies>. You can
    use the following maven command to generate a dependency tree and list all
    maven artifacts (libraries) that are available: $ mvn dependency:tree Check
    your IDE's documentation to display maven's dependency tree. -->
  <dependencies>
    <!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <!-- replaces liferayandvaadinutils (version defined in parent POM) -->
    <dependency>
      <groupId>life.qbic</groupId>
      <artifactId>portal-utils-lib</artifactId>
      <version>1.6.0</version>
    </dependency>
    <dependency>
      <groupId>life.qbic</groupId>
      <artifactId>openbis-client-lib</artifactId>
      <version>1.1.4</version>
    </dependency>
    <dependency>
      <groupId>life.qbic</groupId>
      <artifactId>data-model-lib</artifactId>
      <version>1.8.2</version>
    </dependency>
    <dependency>
      <groupId>life.qbic</groupId>
      <artifactId>core-utils-lib</artifactId>
      <version>1.2.1</version>
    </dependency>
    <!-- Access to our custom databases (portlets use direct JDBC to access
      data for now), but we will create a client library that portlets will use
      (version is defined in the parent POM hierarchy (/portal/pom.xml)) -->
    <!-- https://mvnrepository.com/artifact/com.ibm.icu/icu4j -->
    <dependency>
      <groupId>com.ibm.icu</groupId>
      <artifactId>icu4j</artifactId>
      <version>59.1</version>
    </dependency>
    <dependency>
      <groupId>org.vaadin.addons</groupId>
      <artifactId>filteringtable</artifactId>
      <version>0.9.15.v7</version>
    </dependency>
    <dependency>
      <groupId>com.googlecode.json-simple</groupId>
      <artifactId>json-simple</artifactId>
      <version>1.1</version>
    </dependency>
    <!-- dependencies from portal parent pom-->
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-bom</artifactId>
      <version>${vaadin.version}</version>
      <type>pom</type>
      <scope>import</scope>
    </dependency>
    <dependency>
      <groupId>com.vaadin.addon</groupId>
      <artifactId>vaadin-charts</artifactId>
      <version>3.2.0</version>
    </dependency>
    <!-- Liferay -->
    <dependency>
      <groupId>com.liferay.portal</groupId>
      <artifactId>portal-service</artifactId>
      <version>${liferay.version}</version>
      <scope>provided</scope>
    </dependency>
    <!-- J2EE dependencies -->
    <dependency>
      <groupId>javax.portlet</groupId>
      <artifactId>portlet-api</artifactId>
      <version>2.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.0.1</version>
      <scope>provided</scope>
    </dependency>
    <!-- Liferay dependencies (provided by the servlet container) -->
    <!-- dependencies from parent pom-->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.7</version>
    </dependency>
    <!-- dependencies used for unit tests (spock) -->
    <dependency>
      <groupId>org.spockframework</groupId>
      <artifactId>spock-core</artifactId>
      <version>1.3-groovy-2.5</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.codehaus.groovy</groupId>
          <artifactId>groovy-all</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.mariadb.jdbc</groupId>
      <artifactId>mariadb-java-client</artifactId>
      <version>2.0.2</version>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>8.0.21</version>
    </dependency>
  </dependencies>
</project>
